local sLevelsInSet // Array for store all the levels in the current set

on openCard
   
   if the environment is "mobile" then
      
      set the loc of btn "bg" to the loc of this cd
      set the loc of fld "level_number" to the loc of this cd
      
   end if
   
   // Calculate dimensions
   
   put the width of this card into tCardWidth
   put round(tCardWidth / 23) into tPadding // Word out padding
   put tCardWidth - (tPadding * 2) into tCardWidth // New width of card minus padding
   put round(tCardWidth / 4.7) into tBtnDiameter // Calculate button diameter
   
   put tCardWidth / 4 into tDiv // Width of 1/4 of card
   
   put (tDiv / 2) + tPadding into tX // Work out starting point on X axis
   put (tDiv / 2) + tPadding into tY // And the Y
   
   // Get data
   
   put the cCurrentSet of this stack into tSet // Get current set number
   put the cCurrentLevel of this stack into tLevel // Get current level number
   
   put the customPropertySets of the current stack into tCustomPropertySets // Get stack custom property sets
   
   put 1 into tCount
   repeat for each line tProperty in tCustomPropertySets // Cycle through sets
      
      if "set" & tSet is in tProperty then // If we find a level for this set
         
         put tProperty into sLevelsInSet[tCount] // Add it to array
         
         put tCount + 1 into tCount // tCount++
         
      end if
      
   end repeat
   
   lock screen
   
   put 1 into tLevel
   
   // Add relevant number of buttons to page
   
   put the number of lines of (the keys of sLevelsInSet) into tLevelsArrayLength // Get array length
   
   repeat with x = 1 to tLevelsArrayLength // Go through all levels in this set
      
      // Clone button and set dimensions and loc
      clone graphic "btn_bg"
      set the name of it to "btn_bg" & x
      set the width of it to tBtnDiameter
      set the height of it to tBtnDiameter
      set the loc of it to tX,tY
      clone fld "level_number"
      set the name of it to "level_number" & x
      set the width of it to tBtnDiameter
      set the height of it to tBtnDiameter
      set the loc of it to tX,tY
      put "level_number" & x into tFieldName
      put x into fld tFieldName
      
      //set the opaque of it to true
      
      //put tLevel + 1 into tLevel
      put tX + tDiv into tX
      
      if tX > the width of this card then // If we've come to the end of the row
         
         put (tDiv / 2) + tPadding into tX // Back to first column
         put tY + tBtnDiameter + tPadding into tY // Next row
         
      end if      
      
   end repeat
   
   // Add relevant level details to each button
   
   repeat with x = 1 to tLevelsArrayLength
      
      put "level_number" & x into tLevelField // Get name of field x
      set the cLevel of fld tLevelField to x // Set the cLevel property to the corresponding level number. This will be used to go to the correct card when the button is tapped
      
      put "set" & tSet & "_level" & x into tLevelName

      if the LevelLocking[tLevelName] of the current stack is false then // If this level is locked
         put "btn_bg" & x into tGraphicName
         set the opaque of graphic tGraphicName to true // Set the opaque of the background graphic to full
         set the blendLevel of graphic tGraphicName to 61 // Fade button bg
         set the blendLevel of fld tLevelField to 28 // Fade button value
         set the cUnlocked of fld tLevelField to false // Mark that this field is locked
      else
         set the cUnlocked of fld tLevelField to true // Mark that this field is unlocked
      end if
      
   end repeat 
   
   unlock screen
   
end openCard